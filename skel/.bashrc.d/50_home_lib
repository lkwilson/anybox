# Set usr bin
usr_bin="$HOME/bin"
if [ -d "$usr_bin" ]; then
    PATH="$usr_bin:$PATH"
fi

# bash completion
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    elif [ -f /opt/homebrew/etc/bash_completion ]; then
        . /opt/homebrew/etc/bash_completion # new homebrew
    fi
fi

# git
if which git &>/dev/null; then
    function_exists() {
      declare -f -F $1 > /dev/null
      return $?
    }

    if function_exists __git_aliased_command; then
        for al in $(git config --get-regexp '^alias\.' | cut -f 1 -d ' ' | cut -f 2 -d '.'); do
            alias g$al="git $al"
            complete_func=_git_$(__git_aliased_command $al)
            function_exists $complete_func && __git_complete g$al $complete_func
        done
        unset al
    fi

    # Other git related aliases
    alias is_git='git rev-parse &>/dev/null'
    alias gk='gitk &>/dev/null&'
    alias gka='gitk --all &>/dev/null&'

    # Set git branch PS1
    ps1_git_prefix() {
        if is_git; then
            ps1_git=$(git branch-name 2>/dev/null)
        else
            ps1_git=''
        fi
    }
    PROMPT_COMMAND="ps1_git_prefix;$PROMPT_COMMAND"
fi

# fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

if which code &>/dev/null; then
    alias ch='code .'
fi

# Remap capslock to ctrl
which setxkbmap &>/dev/null && {
    setxkbmap -option ctrl:nocaps &>/dev/null
    setxkbmap -o ctrl:nocaps &>/dev/null
}
