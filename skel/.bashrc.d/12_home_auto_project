# pushd alias
unset -f pd j p sj j1 j2 j3 p1 p2 p3 sj1 sj2 sj3 e e1 e2 e3 es es1 es2 es3

function pd() {
  if [ $# -gt 0 ]; then
    pushd "$@"
  else
    popd
  fi
}

# env jump points
# functions so that env vars are resolved when run
function se() { . ~/.bashrc.d/env; }
function j() { cd "$ENV0"; "$@"; }
function j1() { cd "$ENV1"; "$@"; }
function j2() { cd "$ENV2"; "$@"; }
function j3() { cd "$ENV3"; "$@"; }
function p() { pd "$ENV0"; "$@"; }
function p1() { pd "$ENV1"; "$@"; }
function p2() { pd "$ENV2"; "$@"; }
function p3() { pd "$ENV3"; "$@"; }
function sj() { echo "export ENV0='$(pwd)'" >> ~/.bashrc.d/env; se; }
function sj1() { echo "export ENV1='$(pwd)'" >> ~/.bashrc.d/env; se; }
function sj2() { echo "export ENV2='$(pwd)'" >> ~/.bashrc.d/env; se; }
function sj3() { echo "export ENV3='$(pwd)'" >> ~/.bashrc.d/env; se; }
function e() { ( j "$@"; ) }
function e1() { ( j1 "$@"; ) }
function e2() { ( j2 "$@"; ) }
function e3() { ( j3 "$@"; ) }

# project helper funcs
_ap_file_template() {
    echo "#!/usr/bin/env bash"
    echo
    echo '# This file is meant to be run with `b`, `t`, and `s`. Do not run directly, but do implement functions _ap_build, _ap_test, and _ap_source.'
    echo
    echo 'unset -f _ap_build _ap_test _ap_source'
    echo
    echo "_ap_build() {"
    echo '  echo "No build defined"'
    echo "}"
    echo
    echo "_ap_test() {"
    echo '  echo "No test defined"'
    echo "}"
    echo
    echo "_ap_source() {"
    echo '  echo "No source defined"'
    echo "}"
    echo
    echo '"$@"'
    echo
}

_ap_do() {
    root="$(ap)"
    if [ $? -ne 0 ]; then
        echo "No project dir found" >&2
        return 1
    else
        echo "Project dir found: $root"
    fi

    local OLD_OLDPWD="$OLDPWD"
    pd "$root" &>/dev/null
    . ./.auto_project "$@"
    rc=$?
    pd &>/dev/null
    OLDPWD="$OLD_OLDPWD"
    return $rc
}

# api
ap_init() {
    echo "Initializing auto project. Edit .auto_project"
    _ap_file_template >> .auto_project
    chmod u+x .auto_project
}

ap() {
    while [ "$PWD" != "/" ] && [ ! -f .auto_project ]; do
        cd ..
    done
    if [ -f .auto_project ]; then
        pwd
        return 0
    else
        return 1
    fi
}

apg() {
    root="$(ap)"
    if [ $? -ne 0 ]; then
        echo "No project dir found" >&2
        return 1
    else
        cd "$root"
    fi
}

b() {
    _ap_do _ap_build "$@"
}

t() {
    _ap_do _ap_test "$@"
}

s() {
    _ap_do _ap_source "$@"
}
